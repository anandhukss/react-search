{"version":3,"sources":["components/card/card-component.jsx","components/card-list/card-list.component.jsx","components/search/search-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","data","map","index","Search","placeholder","handleChange","onChange","e","target","value","style","marginBottom","marginLeft","marginTop","type","App","state","monsters","searchField","fetch","then","response","json","setState","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAceA,MAXf,SAAcC,GACV,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,KAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,Y,MCUfC,MAbf,SAAkBR,GAEd,OACI,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,KAAKC,KAAI,SAACP,EAAQQ,GACpB,OAAO,cAAC,EAAD,CAAkBR,QAASA,GAAhBQ,S,MCcvBC,MAtBf,YAA+C,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,aAC7B,OACE,8BACE,uBACEb,UAAU,SACVc,SAAU,SAACC,GACPF,EAAaE,EAAEC,OAAOC,QAE1BC,MAAO,CACLC,aAAc,QACdC,WAAY,QACZC,UAAW,SAEbC,KAAK,OACLjB,KAAK,GACLF,GAAG,GACHS,YAAY,cCgBLW,E,kDA9Bb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,SAAU,GACVC,YAAY,IAJF,E,qDAQd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAAD,OAAU,EAAKC,SAAS,CAAEN,SAAUK,S,oBAG9C,WAAU,IAAD,SACkBE,KAAKR,MAA3BC,EADI,EACJA,SAASC,EADL,EACKA,YACVO,EAAiBR,EAASS,QAAO,SAAChC,GAAD,OAAYA,EAAQG,KAAK8B,cAAcC,SAASV,EAAYS,kBAI/F,OACE,sBAAKnC,UAAU,MAAf,UACE,0CACA,cAAC,EAAD,CAAQa,aANG,SAACI,GAAD,OAAS,EAAKc,SAAS,CAACL,YAAYT,OAOhD,cAAC,EAAD,CAAUT,KAAMyB,W,GAzBLI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.154a5cee.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card-style.css'\r\n\r\nfunction Card(props) {\r\n    return (\r\n        <div className='card-container'>\r\n            <img src={`https://robohash.org/${props.monster.id}?set=set5&size=180x180`} alt=\"\" />\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react';\r\nimport Card from '../card/card-component';\r\nimport  './19.3 card-list.styles.css';\r\n\r\n\r\nfunction CardList(props) {\r\n    \r\n    return (\r\n        <div className=\"card-list\">\r\n            {\r\n                props.data.map((monster,index)=>{\r\n                    return <Card key={index} monster={monster}/>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;\r\n","import \"./search-box-component.css\";\r\nimport React from \"react\";\r\n\r\nfunction Search({ placeholder, handleChange }) {\r\n  return (\r\n    <div>\r\n      <input\r\n        className=\"search\"\r\n        onChange={(e)=>{\r\n            handleChange(e.target.value)\r\n        }}\r\n        style={{\r\n          marginBottom: \"100px\",\r\n          marginLeft: \"100px\",\r\n          marginTop: \"100px\",\r\n        }}\r\n        type=\"text\"\r\n        name=\"\"\r\n        id=\"\"\r\n        placeholder=\"Search\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\nimport CardList  from \"./components/card-list/card-list.component\";\nimport Search from \"./components/search/search-component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField:'',\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((json) => this.setState({ monsters: json }));\n  }\n\n  render() {\nconst {monsters,searchField}=this.state;\nconst filteredMonsters=monsters.filter((monster)=> monster.name.toLowerCase().includes(searchField.toLowerCase()))\nconst handleChange=(value)=>this.setState({searchField:value})\n\n\n    return (\n      <div className=\"App\">\n        <h1>Find Him</h1>\n        <Search handleChange={handleChange}></Search>\n       <CardList data={filteredMonsters}></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}